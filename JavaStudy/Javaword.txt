・ウォーターフォール開発
開発現場でよく用いられる手法で、開発手順を1つずつ確認しながら工程を進めていく手法
次のフェーズに進んでしまうと後戻りができない手法でもある
・アジャイル開発
大きな単位でシステムを区切ることなく、小単位で実装とテストを繰り返して開発を進めていく手法
従来より開発期間が短縮される為アジャイル（素早い）と呼ばれる
・マイグレーション
ソフトウェアやシステム、データなどを別の環境に移転したり、新しい環境に切り替えたりすること
・デグレーション
新しいバージョンのソフトウェアの品質が、以前より悪くなること。
また、以前修正した不具合やバグが再発・復活すること
・デプロイ
開発したソフトウェアを実際の運用環境に配置・展開して実用に供すること
使える状態にすること。
・コンフリクト
複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態になってしまうこと
同じ物を同時に使おうとして、ぶつかっちゃった状態
・開発環境（ローカル）
個人のコンピューター内に構築された環境のこと
・検証環境（ステージング）
検証環境：リリース予定の機能をテストするための環境
ステージング環境：本番環境に条件を限りなく近づけた最終テスト用に用いる、本番環境と類似のテスト環境
・本番環境
報システムやソフトウェアの開発で、できあがった製品を実際に稼働させて利用に供するための施設や機材、ソフトウェアなどを組み合わせた運用環境
・要件定義
システムやソフトウェアの開発において、実装すべき機能や満たすべき性能などのを明確にしていく作業のこと。
いわゆる上流工程の一部で、実際の開発・実装作業を始める前に行う作業
・基本設計書
要件定義と詳細設計の中間で、対象物の機能や構成などの大枠や基本的な仕様を決める工程を意味する。
作るシステムの概要とか基本的なことをまとめた資料
・詳細設計書
前工程で定義された要素の仕様や動作の詳細を定義する行程
作るシステムの具体的な処理とかが書いてある資料
・単体テスト
ソフトウェアやシステムのテスト手法の一つで、単一の部品（モジュール）を対象に行うテスト。
合体前の部品のテスト
・結合テスト
開発中のソフトウェアのテスト手法の一つで、複数のモジュール（部品）を組み合わせて行うテスト。
個々のモジュールの単体テスト後に行う。
合体してちゃんと動くかを確かめるテスト
・総合テスト（ST）
完成したシステムが外部の他のシステムなどと期待通りに連携・接続して動作するかを確認するテスト。
作ったシステムの卒業テスト
・エビデンス
システム開発のテスト工程などで、システムが正しく動作している、あるいは不具合が生じたことを示す証拠となる書類やデータのこと
何かの証拠となるもののこと。
・データパッチ
ソフトウェアを構成するプログラムやデータを更新・修正するために、新しい版との相違点（差分）を抜き出したデータのことをパッチという
・Access
機器やソフトウェア、システム、情報などを利用（操作、取得、閲覧、読み書きなど）可能な状態にすることをアクセスという
・マクロ
関連する複数の操作や手順、命令などを一つにまとめ、必要に応じて呼び出すことができるようにする機能のこと
・VBA
Microsoft Officeに含まれるアプリケーションソフトの拡張機能で、利用者が簡易なプログラムを記述して実行することで複雑な処理の自動化などを行なうことができるもの。
また、そのために用意されたプログラミング言語。
・GAS（Google Apps Script）
JavaScript ベースのスクリプト言語で、ドキュメント、スプレッドシート、スライド、フォームなどの G Suite サービスをカスタマイズ、拡張できます。
ブラウザ内で動作するコードエディタが用意されており、スクリプトは Google のサーバーで実行される
・API（Application Programming Interface）
あるコンピュータプログラム（ソフトウェア）の機能や管理するデータなどを、外部の他のプログラムから呼び出して利用するための手順やデータ形式などを定めた規約
・WEB API
呼び出し規約(API)の類型の一つで、HTTPなどWebの技術を用いて構築されたもの。
・REST API
呼び出し規約(API)の種類の一つで、「REST」（レスト）と呼ばれる設計原則に従って策定されたもの。RESTそのものは適用範囲の広い抽象的なモデル
・SOAP （Simple Object Access Protocol）
異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、連携して動作するための通信プロトコル（規約）の一つ
・Ajax
あるWebページを表示した状態のまま、別のページや再読込などを伴わずにWebサーバ側と通信を行い、動的に表示内容を変更する手法
・XML
文書やデータの意味や構造を記述するためのマークアップ言語の一つ、メタ言語ともいわれる
・JSON　 （JavaScript Object Notation）
JavaScriptにおけるオブジェクトの表記法を応用したテキスト（文字）ベースのデータ形式
・ステータスコード
システムが処理結果や現在の状態を外部に知らせるために発する数字や短い符号。問題発生時にその種類や状態を知らせるものは「エラーコード」とも呼ばれる
・クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）オリジン間リソース共有
追加の HTTP ヘッダーを使用して、あるオリジンで動作しているウェブアプリケーションに、異なるオリジンにある選択されたリソースへのアクセス権を与えるようブラウザーに指示するための仕組み
・バリデーション
対象がその仕様や文法などに照らして適切に記述・構築されているか否かを検証するという意味
・データ連
なるアプリケーションやシステムをまたいでデータを共有、活用するために、それぞれの言葉や解釈の垣根を取り払うプロセス
・Daemon
UNIX系OSでメインメモリ上に常駐して特定の機能を提供するプログラム。利用者の操作とは無関係に処理を行うバックグラウンドプロセスの一種
・CRON
多くのUNIX系OSで標準的に利用される常駐プログラム（デーモン）の一種で、利用者の設定したスケジュールに従って指定されたプログラムを定期的に起動してくれるもの。
・バッチ
一定量の(あるいは一定期間の)データを集め、一括処理するための処理方法
・ログ
起こった出来事についての情報などを一定の形式で時系列に記録・蓄積したデータのこと
何かを記録すること、あるいは、記録した物それ自体
・CSV  （Comma-Separated Values）
テキスト（文字）データの形式の一つで、項目をカンマ「,」で区切って列挙したもの
項目間がカンマで区切られている書式の事
・TSV　（Tab-Separated Values）
複数の項目で構成されるデータを複数件列挙して表現することができる汎用的なデータ形式の一つ
項目間がタブで区切られている書式のこと
・プルリクエスト（マージリクエスト）
リポジトリで行われた変更を別のリポジトリへ反映するようそのリポジトリの管理者に要望する機能を「プルリクエスト
・asana
1 か所でチームの計画を確認し、進捗を追跡し、仕事のディスカッションが行え
・Backlog
今後やる予定の作業や開発する予定のシステムのこと
・Jooto
プロジェクト管理を実現して成功に導くクラウド型のタスク・プロジェクト管理ツール
・Redmineレッドマイン
オープンソースのプロジェクト管理ソフトの一つ。複数人の共同作業における進捗管理や情報共有などができるシステム
・Trello
カードを動かしながらタスクを視覚的に管理できるカンバン方式のツール
・集中型バージョン管理システム　ＳＶＮなど
ファイルそのものや変更の履歴などを保存する場所を「リポジトリ」（貯蔵庫）と呼びますが、SVNの場合は（ソフトウェア1つにつき）1つのリポジトリを使います。
ソフトウェア開発に参加するメンバーは、中央リポジトリ（プロジェクトメンバー間で共有するリポジトリ）からソースコードを持ってきて編集し、編集が終わったら中央リポジトリに直接反映します。
・分散型バージョン管理システム　ＧＩＴなど
リポジトリを複数持つことができ、開発の形態や規模に合わせてソースコードの管理ができます。リポジトリを複数用意できるので「分散型」と呼ばれています。
・GitHub
バージョン管理システム「Git」（ギット）で管理するデータをインターネット上で共有・公開することができるネットサービスの一つ
・Backlog
ユーザー部門や顧客などから開発要求がありながら、予算や人員の不足などにより後回しになり開発に着手できていないシステムや案件などのことをバックログ
・SourceTree
アジャイル開発に優れたツールが好評を得ています。SourceTreeはグラフィカルなインターフェイスを備えている
・Tortoise SVN
バージョン管理システムであるSubversionのクライアントフロントエンド、フリーソフト
・Git Flow
プラグイン(ツール)
・master
プロダクトとしてリリースするためのブランチ。リリースしたらタグ付けする
・release
ソフトウェアの公開や発売のこと
・develop
開発ブランチ。コードが安定し、リリース準備ができたら master へマージする。リリース前はこのブランチが最新バージョン
・feature
ソフトウェアのアジャイル開発プロセスで、利用者の視点から見たソフトウェアやシステムの持つ機能・特徴のこと
・FW フレームワーク
何らかの「型」や「枠組み」、プログラムのひな型
・Spring Framework
、Java言語によるソフトウェア開発を支援するフレームワークの一つ
・Struts
Javaを用いてWebアプリケーションを開発するためのフレームワークの一つ。Apacheソフトウェア財団（ASF）が開発を主催
・JSF（Java Server Faces）
Java言語を用いてWebアプリケーションを開発するためのフレームワークの一つ。Oracle社が開発・提供
・ライブラリ
ある特定の機能を持ったコンピュータプログラムを他のプログラムから呼び出して利用できるように部品化し、そのようなプログラム部品を複数集めて一つのファイルに収納したもの
・Bootstrap
Twitter社が開発したオープンソースのWebアプリケーションフレームワーク。既成の要素や雛形を使用して迅速にWebアプリケーションを開発することができる。
・Flyway
オープンソースのデータベースマイグレーションツール。
Flyway を使うことで、データベースの状態をバージョン管理できるようになる
・Jackson
Java 用の JSON パーサーライブラリの１つ。
Java オブジェクトと JSON の相互変換とかができる。
・jQuery
ウェブブラウザ用のJavaScriptコードをより容易に記述できるようにするために設計されたJavaScriptライブラリ
Webブラウザ上で動作するJavaScriptライブラリの一つ。ブラウザの種類に依らず簡潔な記述で豊富な機能を活用することができる
・Junit
Java言語で開発されたプログラムの単体テスト（ユニットテスト）を行なうためのソフトウェア
・log4j
主にデバッグ用ツールとして使用されている
・Lombok
Java特有の冗長なコードを簡潔にしてくれるオープンソースのライブラリ
・ORM　 Object/RDB mapping 
オブジェクト指向プログラミング言語におけるオブジェクトとリレーショナルデータベース（RDB）の間でデータ形式の相互変換を行うこと
・ChatWork
Chatworkはメール、電話、会議・訪問など仕事で必要なコミュニケーションをより効率的にするビジネスチャット
・Slack
Slack での会話はフォローも簡単です。また、会話だけではなく、通話したり、ファイルを共有したり、ほかのアプリと連携したりすることもできる
・IP Messenger
LAN 用メッセンジャーソフトです。
同じネットワーク内のメンバーを自動認識し、簡単にクライアント同士がリアルタイムに情報交換できる優れたソフトウェア
・Javadoc
Java言語のソースコードに一定の書式でコメントを記述すること
・アノテーション
データやプログラムの中に特殊な記法を用いて埋め込まれた付加情報のこと
・メモリ管理
コンピュータのメモリを管理するもの。 単純化すれば、プログラム（プロセスなど）の要求に応じてメモリの一部を割り当てる方法と、そのメモリが不要となったときに再利用のために解放する方法
・ヒープ
データ構造の一種で、木構造（ツリー構造）のうち、親要素が子要素より常に大きい（あるいは小さい）という条件を満たすもの
・GC ガベージコレクション
コンピュータプログラムの実行環境などが備える機能の一つで、実行中のプログラムが占有していたメモリ領域のうち不要になったものを自動的に解放し、空き領域として再利用できるようにするもの
・GoF　Gang of Four
オブジェクト指向における再利用のためのデザインパターン
・デザインパターン
ソフトウェアの設計時に直面しがちな問題とその典型的な解決策を整理し、様々な場面で応用・再利用できる形にまとめたもの。
・オブジェクト指向
コンピュータプログラムの設計や実装についての考え方の一つで、互いに密接に関連するデータと手続き（処理手順）をオブジェクト（object）と呼ばれる一つのまとまり
・バッチ処理
一定量の(あるいは一定期間の)データを集め、一括処理するための処理方法
・コンパイル
プログラミング言語で書かれた文字列（ソースコード）を、コンピュータ上で実行可能な形式（オブジェクトコード）に変換すること
・カバレッジ
所定の網羅条件がテストによってどれだけ実行されたかを割合で表したもの
・プラットホーム
オペレーティングシステム やハードウェアといった基礎部分,
ソフトウェアを動かすための土台、基盤